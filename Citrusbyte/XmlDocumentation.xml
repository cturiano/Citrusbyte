<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Citrusbyte</name>
    </assembly>
    <members>
        <member name="T:Citrusbyte.WebApiConfig">
            <summary>
            Config for Asp.NET Web API
            </summary>
        </member>
        <member name="M:Citrusbyte.WebApiConfig.Register(System.Web.Http.HttpConfiguration)">
            <summary>
            Register the routing
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:Citrusbyte.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:Citrusbyte.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,Citrusbyte.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:Citrusbyte.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:Citrusbyte.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:Citrusbyte.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:Citrusbyte.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:Citrusbyte.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:Citrusbyte.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:Citrusbyte.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Citrusbyte.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:Citrusbyte.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:Citrusbyte.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:Citrusbyte.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:Citrusbyte.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:Citrusbyte.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:Citrusbyte.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:Citrusbyte.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:Citrusbyte.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:Citrusbyte.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:Citrusbyte.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:Citrusbyte.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:Citrusbyte.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:Citrusbyte.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:Citrusbyte.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:Citrusbyte.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Citrusbyte.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:Citrusbyte.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:Citrusbyte.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:Citrusbyte.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:Citrusbyte.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:Citrusbyte.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,Citrusbyte.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,Citrusbyte.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:Citrusbyte.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:Citrusbyte.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:Citrusbyte.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(Citrusbyte.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:Citrusbyte.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:Citrusbyte.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Citrusbyte.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:Citrusbyte.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:Citrusbyte.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:Citrusbyte.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageSampleKey.#ctor(Citrusbyte.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Citrusbyte.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:Citrusbyte.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:Citrusbyte.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,Citrusbyte.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Citrusbyte.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:Citrusbyte.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:Citrusbyte.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:Citrusbyte.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:Citrusbyte.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:Citrusbyte.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:Citrusbyte.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:Citrusbyte.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:Citrusbyte.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:Citrusbyte.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Citrusbyte.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:Citrusbyte.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:Citrusbyte.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:Citrusbyte.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:Citrusbyte.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:Citrusbyte.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:Citrusbyte.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Citrusbyte.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="T:Citrusbyte.Controllers.AccountController">
            <inheritdoc />
            <summary>
                Class for actions related to user accounts
            </summary>
        </member>
        <member name="M:Citrusbyte.Controllers.AccountController.#ctor">
            <inheritdoc />
            <summary>
                Default Constructor
            </summary>
        </member>
        <member name="M:Citrusbyte.Controllers.AccountController.#ctor(Citrusbyte.ApplicationUserManager,Citrusbyte.ApplicationSignInManager)">
            <inheritdoc />
            <summary>
                Parameterized constructor
            </summary>
            <param name="userManager"></param>
            <param name="signInManager"></param>
        </member>
        <member name="P:Citrusbyte.Controllers.AccountController.SignInManager">
            <summary>
                The <see cref="T:Citrusbyte.ApplicationSignInManager" /> for this instance
            </summary>
        </member>
        <member name="P:Citrusbyte.Controllers.AccountController.UserManager">
            <summary>
                The <see cref="T:Citrusbyte.ApplicationUserManager" /> for this instance
            </summary>
        </member>
        <member name="M:Citrusbyte.Controllers.AccountController.ConfirmEmail(System.String,System.String)">
            <summary>
                Gets the Confirm Emal view for the user with the given id
            </summary>
            <param name="userId">The id of the user</param>
            <param name="code"></param>
            <returns></returns>
            <remarks>GET: /Account/ConfirmEmail</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.AccountController.ExternalLogin(System.String,System.String)">
            <summary>
            </summary>
            <param name="provider"></param>
            <param name="returnUrl"></param>
            <returns></returns>
            <remarks>POST: /Account/ExternalLogin</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.AccountController.ExternalLoginCallback(System.String)">
            <summary>
            </summary>
            <param name="returnUrl"></param>
            <returns></returns>
            <remarks>GET: /Account/ExternalLoginCallback</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.AccountController.ExternalLoginConfirmation(Citrusbyte.Models.ExternalLoginConfirmationViewModel,System.String)">
            <summary>
            </summary>
            <param name="model"></param>
            <param name="returnUrl"></param>
            <returns></returns>
            <remarks>POST: /Account/ExternalLoginConfirmation</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.AccountController.ExternalLoginFailure">
            <summary>
                Gets the view for login failure
            </summary>
            <returns></returns>
            <remarks>GET: /Account/ExternalLoginFailure</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.AccountController.ForgotPassword">
            <summary>
                Gets the view for forgot password
            </summary>
            <returns></returns>
            <remarks>GET: /Account/ForgotPassword</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.AccountController.ForgotPassword(Citrusbyte.Models.ForgotPasswordViewModel)">
            <summary>
            </summary>
            <param name="model"></param>
            <returns></returns>
            <remarks>POST: /Account/ForgotPassword</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.AccountController.ForgotPasswordConfirmation">
            <summary>
            </summary>
            <returns></returns>
            <remarks>GET: /Account/ForgotPasswordConfirmation</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.AccountController.Login(System.String)">
            <summary>
            </summary>
            <param name="returnUrl"></param>
            <returns></returns>
            <remarks>GET: /Account/Login</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.AccountController.Login(Citrusbyte.Models.LoginViewModel,System.String)">
            <summary>
            </summary>
            <param name="model"></param>
            <param name="returnUrl"></param>
            <returns></returns>
            <remarks>POST: /Account/Login</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.AccountController.LogOff">
            <summary>
            </summary>
            <returns></returns>
            <remarks>POST: /Account/LogOff</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.AccountController.Register">
            <summary>
            </summary>
            <returns></returns>
            <remarks>GET: /Account/Register</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.AccountController.Register(Citrusbyte.Models.RegisterViewModel)">
            <summary>
            </summary>
            <param name="model"></param>
            <returns></returns>
            <remarks>POST: /Account/Register</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.AccountController.ResetPassword(System.String)">
            <summary>
            </summary>
            <param name="code"></param>
            <returns></returns>
            <remarks>GET: /Account/ResetPassword</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.AccountController.ResetPassword(Citrusbyte.Models.ResetPasswordViewModel)">
            <summary>
            </summary>
            <param name="model"></param>
            <returns></returns>
            <remarks>POST: /Account/ResetPassword</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.AccountController.ResetPasswordConfirmation">
            <summary>
            </summary>
            <returns></returns>
            <remarks>GET: /Account/ResetPasswordConfirmation</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.AccountController.SendCode(System.String,System.Boolean)">
            <summary>
            </summary>
            <param name="returnUrl"></param>
            <param name="rememberMe"></param>
            <returns></returns>
            <remarks>GET: /Account/SendCode</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.AccountController.SendCode(Citrusbyte.Models.SendCodeViewModel)">
            <summary>
            </summary>
            <param name="model"></param>
            <returns></returns>
            <remarks>POST: /Account/SendCode</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.AccountController.VerifyCode(System.String,System.String,System.Boolean)">
            <summary>
            </summary>
            <param name="provider"></param>
            <param name="returnUrl"></param>
            <param name="rememberMe"></param>
            <returns></returns>
            <remarks>GET: /Account/VerifyCode</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.AccountController.VerifyCode(Citrusbyte.Models.VerifyCodeViewModel)">
            <summary>
            </summary>
            <param name="model"></param>
            <returns></returns>
            <remarks>POST: /Account/VerifyCode</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.AccountController.Dispose(System.Boolean)">
            <inheritdoc />
            <summary>
                Disposes of the <see cref="T:Citrusbyte.ApplicationUserManager" /> and
                <see cref="T:Citrusbyte.ApplicationSignInManager" /> instances
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:Citrusbyte.Controllers.DevicesController">
            <inheritdoc />
            <summary>
                Class for actions related to <see cref="T:Citrusbyte.Models.Device" />
            </summary>
        </member>
        <member name="M:Citrusbyte.Controllers.DevicesController.Create">
            <summary>
                Gets the create <see cref="T:Citrusbyte.Models.Device" /> view
            </summary>
            <returns></returns>
            <remarks>GET: Devices/Create</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.DevicesController.Create(Citrusbyte.Models.Device)">
            <summary>
                Create the given <see cref="T:Citrusbyte.Models.Device" /> in the database
            </summary>
            <param name="device">The <see cref="T:Citrusbyte.Models.Device" /> to add to the database</param>
            <returns></returns>
            <remarks>
                POST: Devices/Create
                To protect from overposting attacks, please enable the specific properties you want to bind to, for
                more details see https://go.microsoft.com/fwlink/?LinkId=317598
            </remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.DevicesController.Delete(System.Nullable{System.Int32})">
            <summary>
                Gets the delete <see cref="T:Citrusbyte.Models.Device" /> view
            </summary>
            <returns></returns>
            <remarks>GET: Devices/Delete/5</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.DevicesController.DeleteConfirmed(System.Int32)">
            <summary>
                Deletes the <see cref="T:Citrusbyte.Models.Device" /> with the given id
            </summary>
            <param name="id">The id of the <see cref="T:Citrusbyte.Models.Device" /> to delete</param>
            <returns></returns>
            <remarks>POST: Devices/Delete/5</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.DevicesController.Details(System.Nullable{System.Int32})">
            <summary>
                Gets the details <see cref="T:Citrusbyte.Models.Device" /> view
            </summary>
            <param name="id">The id of the <see cref="T:Citrusbyte.Models.Device" /> for which to show details</param>
            <returns></returns>
            <remarks>GET: Devices/Details/5</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.DevicesController.DetailsGuid(System.Nullable{System.Guid})">
            <summary>
                Gets the details <see cref="T:Citrusbyte.Models.Device" /> view
            </summary>
            <param name="id">The <see cref="T:System.Guid"/> of the <see cref="T:Citrusbyte.Models.Device" /> for which to show details</param>
            <returns></returns>
            <remarks>GET: Devices/DetailsGuid/92b2aec4-edb4-44d5-ad2b-8ad47134545b</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.DevicesController.Edit(System.Nullable{System.Int32})">
            <summary>
                Gets the edit <see cref="T:Citrusbyte.Models.Device" /> view
            </summary>
            <param name="id">The id of the <see cref="T:Citrusbyte.Models.Device" /> to edit</param>
            <returns></returns>
            <remarks>GET: Devices/Edit/5</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.DevicesController.Edit(Citrusbyte.Models.Device)">
            <summary>
                Edits the given <see cref="T:Citrusbyte.Models.Device" />
            </summary>
            <param name="device">The <see cref="T:Citrusbyte.Models.Device" /> to edit</param>
            <returns></returns>
            <remarks>
                POST: Devices/Edit/5
                To protect from overposting attacks, please enable the specific properties you want to bind to, for
                more details see https://go.microsoft.com/fwlink/?LinkId=317598
            </remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.DevicesController.Index">
            <summary>
                Gets the main <see cref="T:Citrusbyte.Models.Device" /> view
            </summary>
            <returns></returns>
            <remarks></remarks>
            GET: Devices
        </member>
        <member name="M:Citrusbyte.Controllers.DevicesController.Dispose(System.Boolean)">
            <inheritdoc />
            <summary>
                Disposes of the <see cref="T:System.Data.Entity.DbContext" /> object
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:Citrusbyte.Controllers.HomeController">
            <inheritdoc />
            <summary>
                Class for actions related to the first page of the application
            </summary>
        </member>
        <member name="M:Citrusbyte.Controllers.HomeController.Index">
            <summary>
                Gets the index view
            </summary>
            <returns></returns>
        </member>
        <member name="T:Citrusbyte.Controllers.ManageController">
            <inheritdoc />
            <summary>
                Class for actions related to managing users
            </summary>
        </member>
        <member name="M:Citrusbyte.Controllers.ManageController.#ctor">
            <inheritdoc />
            <summary>
                Default constructor
            </summary>
        </member>
        <member name="M:Citrusbyte.Controllers.ManageController.#ctor(Citrusbyte.ApplicationUserManager,Citrusbyte.ApplicationSignInManager)">
            <inheritdoc />
            <summary>
                Parameterized constructor
            </summary>
            <param name="userManager"></param>
            <param name="signInManager"></param>
        </member>
        <member name="P:Citrusbyte.Controllers.ManageController.SignInManager">
            <summary>
                The <see cref="T:Citrusbyte.ApplicationSignInManager" /> for this instance
            </summary>
        </member>
        <member name="P:Citrusbyte.Controllers.ManageController.UserManager">
            <summary>
                The <see cref="T:Citrusbyte.ApplicationUserManager" /> for this instance
            </summary>
        </member>
        <member name="M:Citrusbyte.Controllers.ManageController.AddPhoneNumber">
            <summary>
                Gets the view for adding a phone numer
            </summary>
            <returns></returns>
            <remarks>GET: /Manage/AddPhoneNumber</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.ManageController.AddPhoneNumber(Citrusbyte.Models.AddPhoneNumberViewModel)">
            <summary>
                Adds the given <see cref="T:Citrusbyte.Models.AddPhoneNumberViewModel" /> phone number to the database
            </summary>
            <param name="model"></param>
            <returns></returns>
            <remarks>POST: /Manage/AddPhoneNumber</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.ManageController.ChangePassword">
            <summary>
                Gets the view to change passwords
            </summary>
            <returns></returns>
            <remarks>GET: /Manage/ChangePassword</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.ManageController.ChangePassword(Citrusbyte.Models.ChangePasswordViewModel)">
            <summary>
                Changes the password
            </summary>
            <param name="model">The <see cref="T:Citrusbyte.Models.ChangePasswordViewModel" /> to change the password</param>
            <returns></returns>
            <remarks>POST: /Manage/ChangePassword</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.ManageController.DisableTwoFactorAuthentication">
            <summary>
                Disables two factor authentication
            </summary>
            <returns></returns>
            <remarks>POST: /Manage/DisableTwoFactorAuthentication</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.ManageController.EnableTwoFactorAuthentication">
            <summary>
                Enables two factor authentication
            </summary>
            <returns></returns>
            <remarks>POST: /Manage/EnableTwoFactorAuthentication</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.ManageController.Index(System.Nullable{Citrusbyte.Controllers.ManageController.ManageMessageId})">
            <summary>
                Gets the index view
            </summary>
            <param name="message"></param>
            <returns></returns>
            <remarks>GET: /Manage/Index</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.ManageController.LinkLogin(System.String)">
            <summary>
                Gets the Link login
            </summary>
            <param name="provider"></param>
            <returns></returns>
            <remarks>POST: /Manage/LinkLogin</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.ManageController.LinkLoginCallback">
            <summary>
                Gets the link login callback
            </summary>
            <returns></returns>
            <remarks>GET: /Manage/LinkLoginCallback</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.ManageController.ManageLogins(System.Nullable{Citrusbyte.Controllers.ManageController.ManageMessageId})">
            <summary>
                Gets the view to manage logins
            </summary>
            <param name="message"></param>
            <returns></returns>
            <remarks>GET: /Manage/ManageLogins</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.ManageController.RemoveLogin(System.String,System.String)">
            <summary>
                Removes the login with the given credentials
            </summary>
            <param name="loginProvider"></param>
            <param name="providerKey"></param>
            <returns></returns>
            <remarks>POST: /Manage/RemoveLogin</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.ManageController.RemovePhoneNumber">
            <summary>
                Removes the phone number for this user
            </summary>
            <returns></returns>
            <remarks>POST: /Manage/RemovePhoneNumber</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.ManageController.SetPassword">
            <summary>
                Gets the set password view
            </summary>
            <returns></returns>
            <remarks>GET: /Manage/SetPassword</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.ManageController.SetPassword(Citrusbyte.Models.SetPasswordViewModel)">
            <summary>
                Sets the password to the given <see cref="T:Citrusbyte.Models.SetPasswordViewModel" />
            </summary>
            <param name="model"></param>
            <returns></returns>
            <remarks>POST: /Manage/SetPassword</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.ManageController.VerifyPhoneNumber(System.String)">
            <summary>
                Gets the verify phone number view
            </summary>
            <param name="phoneNumber"></param>
            <returns></returns>
            <remarks>GET: /Manage/VerifyPhoneNumber</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.ManageController.VerifyPhoneNumber(Citrusbyte.Models.VerifyPhoneNumberViewModel)">
            <summary>
                Verifies the given phone number
            </summary>
            <param name="model"></param>
            <returns></returns>
            <remarks>POST: /Manage/VerifyPhoneNumber</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.ManageController.Dispose(System.Boolean)">
            <inheritdoc />
            <summary>
                disposes of the <see cref="T:Citrusbyte.ApplicationUserManager" /> object
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:Citrusbyte.Controllers.ManageController.ManageMessageId">
            <summary>
            The message ids for the management UI
            </summary>
        </member>
        <member name="T:Citrusbyte.Controllers.SensorReadingsController">
            <inheritdoc />
            <summary>
                Class for actions related to <see cref="T:Citrusbyte.Models.SensorReading" />
            </summary>
        </member>
        <member name="M:Citrusbyte.Controllers.SensorReadingsController.BuildReadingsTable(System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
                Gets the view for the <see cref="T:Citrusbyte.Models.SensorReading" /> table
            </summary>
            <param name="deviceId">The optional id of the device for which to fetch the readings.</param>
            <param name="start">The <see cref="T:System.DateTime"/> at which to begin filtering.</param>
            <param name="end">The <see cref="T:System.DateTime"/> at which to stop filtering.</param>
            <returns></returns>
            <remarks>GET: ReadingsTable</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.SensorReadingsController.Create">
            <summary>
                Gets the view to create a <see cref="T:Citrusbyte.Models.SensorReading" />
            </summary>
            <returns></returns>
            <remarks>GET: SensorReadings/Create</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.SensorReadingsController.Create(Citrusbyte.Models.SensorReading)">
            <summary>
                Creates the <see cref="T:Citrusbyte.Models.SensorReading" />
            </summary>
            <param name="sensorReading">The <see cref="T:Citrusbyte.Models.SensorReading" /> to add to the database.</param>
            <returns></returns>
            <remarks>
                POST: SensorReadings/Create
                To protect from overposting attacks, please enable the specific properties you want to bind to, for
                more details see https://go.microsoft.com/fwlink/?LinkId=317598.
            </remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.SensorReadingsController.Delete(System.Nullable{System.Int32})">
            <summary>
                Gets the view to delete a <see cref="T:Citrusbyte.Models.SensorReading" />
            </summary>
            <param name="id">The optional id of the <see cref="T:Citrusbyte.Models.SensorReading" /> to delete.</param>
            <returns></returns>
            <remarks>GET: SensorReadings/Delete/5</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.SensorReadingsController.DeleteConfirmed(System.Int32)">
            <summary>
                Deletes the <see cref="T:Citrusbyte.Models.SensorReading" />
            </summary>
            <param name="id">The id of the <see cref="T:Citrusbyte.Models.SensorReading" /> to delete.</param>
            <returns></returns>
            <remarks>POST: SensorReadings/Delete/5</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.SensorReadingsController.Details(System.Nullable{System.Int32})">
            <summary>
                Gets the details view for the <see cref="T:Citrusbyte.Models.SensorReading" />
            </summary>
            <param name="id">The optional id of the <see cref="T:Citrusbyte.Models.SensorReading" /> for which to fetch the details.</param>
            <returns></returns>
            <remarks>GET: SensorReadings/Details/5</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.SensorReadingsController.Edit(System.Nullable{System.Int32})">
            <summary>
                Gets the view for editing a <see cref="T:Citrusbyte.Models.SensorReading" />
            </summary>
            <param name="id">The id of the <see cref="T:Citrusbyte.Models.SensorReading" /> to edit.</param>
            <returns></returns>
            <remarks>GET: SensorReadings/Edit/5</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.SensorReadingsController.Edit(Citrusbyte.Models.SensorReading)">
            <summary>
                Updates the <see cref="T:Citrusbyte.Models.SensorReading" />
            </summary>
            <param name="sensorReading">The <see cref="T:Citrusbyte.Models.SensorReading" /> to update in the database</param>
            <returns></returns>
            <remarks>
                POST: SensorReadings/Edit/5
                To protect from overposting attacks, please enable the specific properties you want to bind to, for
                more details see https://go.microsoft.com/fwlink/?LinkId=317598
            </remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.SensorReadingsController.Index">
            <summary>
                Gets the view for the <see cref="T:Citrusbyte.Models.SensorReading" />
            </summary>
            <returns></returns>
            <remarks>GET: SensorReadings</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.SensorReadingsController.Dispose(System.Boolean)">
            <inheritdoc />
            <summary>
                Disposes of the <see cref="T:System.Data.Entity.DbContext" /> object
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:Citrusbyte.Controllers.ToDoItemsController">
            <inheritdoc />
            <summary>
            Controller for the To Do List
            </summary>
        </member>
        <member name="M:Citrusbyte.Controllers.ToDoItemsController.BuildToDoTable">
            <summary>
            Builds the table of To Do Items
            </summary>
            <returns></returns>
            <remarks>GET: ToDoTable</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.ToDoItemsController.Create">
            <summary>
            Gets the view for creating a To Do Item
            </summary>
            <returns></returns>
            <remarks>GET: ToDoItems/Create</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.ToDoItemsController.Create(Citrusbyte.Models.ToDoItem)">
            <summary>
            Creates a To Do Item
            </summary>
            <param name="toDoItem">The <see cref="T:Citrusbyte.Models.ToDoItem"/> to create, in JSON form</param>
            <returns></returns>
            <remarks>POST: ToDoItems/Create
            To protect from overposting attacks, please enable the specific properties you want to bind to, for 
            more details see https://go.microsoft.com/fwlink/?LinkId=317598 </remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.ToDoItemsController.AjaxCreate(Citrusbyte.Models.ToDoItem)">
            <summary>
            Creates a To Do Item using AJAX
            </summary>
            <param name="toDoItem">The <see cref="T:Citrusbyte.Models.ToDoItem"/> to create, in JSON form</param>
            <returns></returns>
            <remarks>POST: ToDoItems/AjaxCreate
            To protect from overposting attacks, please enable the specific properties you want to bind to, for 
            more details see https://go.microsoft.com/fwlink/?LinkId=317598 </remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.ToDoItemsController.Delete(System.Nullable{System.Int32})">
            <summary>
            Gets the detete to do item view
            </summary>
            <param name="id">The id of the <see cref="T:Citrusbyte.Models.ToDoItem"/> to delete</param>
            <returns></returns>
            <remarks>GET: ToDoItems/Delete/5</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.ToDoItemsController.DeleteConfirmed(System.Int32)">
            <summary>
            Deletes a To Do Item
            </summary>
            <param name="id">The id of the <see cref="T:Citrusbyte.Models.ToDoItem"/> to delete</param>
            <returns></returns>
            <remarks>POST: ToDoItems/Delete/5</remarks> 
        </member>
        <member name="M:Citrusbyte.Controllers.ToDoItemsController.Details(System.Nullable{System.Int32})">
            <summary>
            Gets the To Do Item details view
            </summary>
            <param name="id"></param>
            <returns></returns>
            <remarks>GET: ToDoItems/Details/5</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.ToDoItemsController.Edit(System.Nullable{System.Int32})">
            <summary>
            Gets the To Do Item Edit view
            </summary>
            <param name="id"></param>
            <returns></returns>
            <remarks>GET: ToDoItems/Edit/5</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.ToDoItemsController.Edit(Citrusbyte.Models.ToDoItem)">
            <summary>
            Edits the To Do Item
            </summary>
            <param name="toDoItem">The item to update</param>
            <returns></returns>
            <remarks>POST: ToDoItems/Edit/5
            To protect from overposting attacks, please enable the specific properties you want to bind to, for 
            more details see https://go.microsoft.com/fwlink/?LinkId=317598 </remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.ToDoItemsController.AjaxEdit(System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Edits the To Do Item using AJAX
            </summary>
            <param name="id">The id of the item to update</param>
            <param name="value">Whether or not this To Do Item has been completed</param>
            <returns></returns>
            <remarks>POST: ToDoItems/Edit/5
            To protect from overposting attacks, please enable the specific properties you want to bind to, for 
            more details see https://go.microsoft.com/fwlink/?LinkId=317598 </remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.ToDoItemsController.Index">
            <summary>
            Gets the To Do Items view
            </summary>
            <returns></returns>
            <remarks>GET: ToDoItems</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.ToDoItemsController.Dispose(System.Boolean)">
            <summary>
            Disposes of the <see cref="T:System.Data.Entity.DbContext"/> object
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Citrusbyte.Controllers.ValuesController.Delete(System.Int32)">
            <summary>
            deletes a value
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:Citrusbyte.Controllers.WebApiDevicesController">
            <inheritdoc />
            <summary>
                Class for actions related to <see cref="T:Citrusbyte.Models.Device" />
            </summary>
        </member>
        <member name="M:Citrusbyte.Controllers.WebApiDevicesController.DeleteDevice(System.Int32)">
            <summary>
                Deletes the <see cref="T:Citrusbyte.Models.Device" /> with the given id
            </summary>
            <param name="id">The id of the <see cref="T:Citrusbyte.Models.Device" /> to delete</param>
            <returns><see cref="T:System.Web.Http.IHttpActionResult" /> the <see cref="T:Citrusbyte.Models.Device" /> that was deleted or Not Found</returns>
            <remarks>DELETE: api/WebApiDevices/5</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.WebApiDevicesController.GetDevice(System.Int32)">
            <summary>
                Gets the <see cref="T:Citrusbyte.Models.Device" /> with the given id
            </summary>
            <param name="id">The id of the device to get</param>
            <returns><see cref="T:System.Web.Http.IHttpActionResult" /> containing the <see cref="T:Citrusbyte.Models.Device" /> or not found</returns>
            <remarks>GET: api/WebApiDevices/5</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.WebApiDevicesController.GetDevice(System.Guid)">
            <summary>
                Gets the <see cref="T:Citrusbyte.Models.Device" /> with the given GUID
            </summary>
            <param name="serial">The id of the device to get</param>
            <returns><see cref="T:System.Web.Http.IHttpActionResult" /> containing the <see cref="T:Citrusbyte.Models.Device" /> or not found</returns>
            <remarks>GET: api/WebApiDevices?serial=92b2aec4-edb4-44d5-ad2b-8ad47134545b</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.WebApiDevicesController.GetDevices">
            <summary>
                Gets all the devices
            </summary>
            <returns>A <see cref="T:System.Linq.IQueryable`1" /></returns>
            <remarks>GET: api/WebApiDevices</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.WebApiDevicesController.PostDevice(Citrusbyte.Models.Device)">
            <summary>
                Adds the given<see cref="T:Citrusbyte.Models.Device" /> to the database
            </summary>
            <param name="device">The <see cref="T:Citrusbyte.Models.Device" /> to add</param>
            <returns>An <see cref="T:System.Web.Http.IHttpActionResult" /> containing the index of the created device.</returns>
            <remarks>POST: api/WebApiDevices</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.WebApiDevicesController.PutDevice(System.Int32,Citrusbyte.Models.Device)">
            <summary>
                Updates a <see cref="T:Citrusbyte.Models.Device" /> with the given id to the properties of the given devices
            </summary>
            <param name="id">The id of the <see cref="T:Citrusbyte.Models.Device" /> to update.</param>
            <param name="device">The properties the new <see cref="T:Citrusbyte.Models.Device" /> should contain.</param>
            <returns>An <see cref="T:System.Web.Http.IHttpActionResult" /> containing the status of the update.</returns>
            <remarks>PUT: api/WebApiDevices/5</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.WebApiDevicesController.Dispose(System.Boolean)">
            <inheritdoc />
            <summary>
                Disposes of the <see cref="T:System.Data.Entity.DbContext" />
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:Citrusbyte.Controllers.WebApiSensorReadingsController">
            <inheritdoc />
            <summary>
                Class for actions related to <see cref="T:Citrusbyte.Models.SensorReading" />
            </summary>
        </member>
        <member name="M:Citrusbyte.Controllers.WebApiSensorReadingsController.DeleteSensorReading(System.Int32)">
            <summary>
                Deletes the <see cref="T:Citrusbyte.Models.SensorReading" /> with the given id
            </summary>
            <param name="id">The id of the <see cref="T:Citrusbyte.Models.SensorReading" /> to delete</param>
            <returns><see cref="T:System.Web.Http.IHttpActionResult" /> the <see cref="T:Citrusbyte.Models.SensorReading" /> that was deleted or Not Found</returns>
            <remarks>DELETE: api/SensorReadings/5</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.WebApiSensorReadingsController.GetSensorReading(System.Int32)">
            <summary>
                Gets the <see cref="T:Citrusbyte.Models.SensorReading" /> with the given id
            </summary>
            <param name="id">The id of the SensorReading to get</param>
            <returns><see cref="T:System.Web.Http.IHttpActionResult" /> containing the <see cref="T:Citrusbyte.Models.SensorReading" /> or not found</returns>
            <remarks>GET: api/SensorReadings/5</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.WebApiSensorReadingsController.GetSensorReadings(System.Nullable{System.Int32})">
            <summary>
                Gets all the SensorReadings, perhaps for a device with the given id
            </summary>
            <param name="deviceId">The id of <see cref="T:Citrusbyte.Models.Device" /> whose <see cref="T:Citrusbyte.Models.SensorReading" /> to get.</param>
            <returns>A <see cref="T:System.Linq.IQueryable`1" /></returns>
            <remarks>GET: api/SensorReadings</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.WebApiSensorReadingsController.PostSensorReading(Citrusbyte.Models.SensorReading)">
            <summary>
                Adds the given<see cref="T:Citrusbyte.Models.SensorReading" /> to the database
            </summary>
            <param name="sensorReading">The <see cref="T:Citrusbyte.Models.SensorReading" /> to add</param>
            <returns>An <see cref="T:System.Web.Http.IHttpActionResult" /> containing the index of the created SensorReading.</returns>
            <remarks>POST: api/SensorReadings</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.WebApiSensorReadingsController.PutSensorReading(System.Int32,Citrusbyte.Models.SensorReading)">
            <summary>
                Updates a <see cref="T:Citrusbyte.Models.SensorReading" /> with the given id to the properties of the given SensorReadings
            </summary>
            <param name="id">The id of the <see cref="T:Citrusbyte.Models.SensorReading" /> to update.</param>
            <param name="sensorReading">The properties the new <see cref="T:Citrusbyte.Models.SensorReading" /> should contain.</param>
            <returns>An <see cref="T:System.Web.Http.IHttpActionResult" /> containing the status of the update.</returns>
            <remarks>PUT: api/SensorReadings/5</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.WebApiSensorReadingsController.Dispose(System.Boolean)">
            <inheritdoc />
            <summary>
                Disposes of the <see cref="T:System.Data.Entity.DbContext" />
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:Citrusbyte.Controllers.WebApiToDoItemsController">
            <inheritdoc />
            <summary>
                Class for actions related to <see cref="T:Citrusbyte.Models.ToDoItem" />
            </summary>
        </member>
        <member name="M:Citrusbyte.Controllers.WebApiToDoItemsController.DeleteToDoItem(System.Int32)">
            <summary>
                Deletes the <see cref="T:Citrusbyte.Models.ToDoItem" /> with the given id
            </summary>
            <param name="id">The id of the <see cref="T:Citrusbyte.Models.ToDoItem" /> to delete</param>
            <returns><see cref="T:System.Web.Http.IHttpActionResult" /> the <see cref="T:Citrusbyte.Models.ToDoItem" /> that was deleted or Not Found</returns>
            <remarks>DELETE: api/ToDoItems/5</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.WebApiToDoItemsController.GetToDoItem(System.Int32)">
            <summary>
                Gets the <see cref="T:Citrusbyte.Models.ToDoItem" /> with the given id
            </summary>
            <param name="id">The id of the ToDoItem to get</param>
            <returns><see cref="T:System.Web.Http.IHttpActionResult" /> containing the <see cref="T:Citrusbyte.Models.ToDoItem" /> or not found</returns>
            <remarks>GET: api/ToDoItems/5</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.WebApiToDoItemsController.GetToDoItems(System.Nullable{System.Int32})">
            <summary>
                Gets all the ToDoItems
            </summary>
            <returns>A <see cref="T:System.Linq.IQueryable`1" /></returns>
            <remarks>GET: api/ToDoItems</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.WebApiToDoItemsController.PostToDoItem(Citrusbyte.Models.ToDoItem)">
            <summary>
                Adds the given<see cref="T:Citrusbyte.Models.ToDoItem" /> to the database
            </summary>
            <param name="toDoItem">The <see cref="T:Citrusbyte.Models.ToDoItem" /> to add</param>
            <returns>An <see cref="T:System.Web.Http.IHttpActionResult" /> containing the index of the created ToDoItem.</returns>
            <remarks>POST: api/ToDoItems</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.WebApiToDoItemsController.PutToDoItem(System.Int32,Citrusbyte.Models.ToDoItem)">
            <summary>
                Updates a <see cref="T:Citrusbyte.Models.ToDoItem" /> with the given id to the properties of the given ToDoItems
            </summary>
            <param name="id">The id of the <see cref="T:Citrusbyte.Models.ToDoItem" /> to update.</param>
            <param name="toDoItem">The properties the new <see cref="T:Citrusbyte.Models.ToDoItem" /> should contain.</param>
            <returns>An <see cref="T:System.Web.Http.IHttpActionResult" /> containing the status of the update.</returns>
            <remarks>PUT: api/ToDoItems/5</remarks>
        </member>
        <member name="M:Citrusbyte.Controllers.WebApiToDoItemsController.Dispose(System.Boolean)">
            <inheritdoc />
            <summary>
                Disposes of the <see cref="T:System.Data.Entity.DbContext" />
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:Citrusbyte.MvcApplication">
            <inheritdoc />
            <summary>
            MVC Application
            </summary>
        </member>
        <member name="M:Citrusbyte.MvcApplication.Application_Start">
            <summary>
            Called when the application starts.  Registers all the importants stuff
            </summary>
        </member>
        <member name="T:Citrusbyte.Models.Device">
            <summary>
                Represents a physical device
            </summary>
        </member>
        <member name="M:Citrusbyte.Models.Device.#ctor">
            <summary>
                default constructor
            </summary>
        </member>
        <member name="M:Citrusbyte.Models.Device.#ctor(System.Int32,System.Guid,System.String)">
            <summary>
                parameterized constructor
            </summary>
            <param name="id"></param>
            <param name="serialNumber"></param>
            <param name="firmwareVersion"></param>
        </member>
        <member name="P:Citrusbyte.Models.Device.Firmware_Version">
            <summary>
                The version of the firmware for this <see cref="T:Citrusbyte.Models.Device" />
            </summary>
        </member>
        <member name="P:Citrusbyte.Models.Device.Id">
            <summary>
                The database id of this <see cref="T:Citrusbyte.Models.Device" />
            </summary>
        </member>
        <member name="P:Citrusbyte.Models.Device.RegistrationDate">
            <summary>
                The date and time this <see cref="T:Citrusbyte.Models.Device" /> was registered
            </summary>
        </member>
        <member name="P:Citrusbyte.Models.Device.Serial">
            <summary>
                The serial number of this <see cref="T:Citrusbyte.Models.Device" />
            </summary>
        </member>
        <member name="T:Citrusbyte.Models.SensorReading">
            <summary>
                A sensor reading for a device
            </summary>
        </member>
        <member name="M:Citrusbyte.Models.SensorReading.#ctor">
            <summary>
                Default constructor
            </summary>
        </member>
        <member name="M:Citrusbyte.Models.SensorReading.#ctor(System.Int32,System.Double,System.Double,System.Double,System.String,System.Int32)">
            <summary>
                Parameterized constructor
            </summary>
            <param name="id"></param>
            <param name="temp"></param>
            <param name="humidity"></param>
            <param name="coPercent"></param>
            <param name="status"></param>
            <param name="ownerId"></param>
        </member>
        <member name="P:Citrusbyte.Models.SensorReading.CO">
            <summary>
                The carbon monoxide level of this <see cref="T:Citrusbyte.Models.SensorReading" /> in parts per million
            </summary>
        </member>
        <member name="P:Citrusbyte.Models.SensorReading.Humidity">
            <summary>
                The percent humidity of this <see cref="T:Citrusbyte.Models.SensorReading" />
            </summary>
        </member>
        <member name="P:Citrusbyte.Models.SensorReading.Id">
            <summary>
                The database id of this <see cref="T:Citrusbyte.Models.SensorReading" />
            </summary>
        </member>
        <member name="P:Citrusbyte.Models.SensorReading.Owner">
            <summary>
                The <see cref="T:Citrusbyte.Models.Device" /> that generated this <see cref="T:Citrusbyte.Models.SensorReading" />
            </summary>
        </member>
        <member name="P:Citrusbyte.Models.SensorReading.OwnerId">
            <summary>
                The the id of the <see cref="T:Citrusbyte.Models.Device" /> that generated this <see cref="T:Citrusbyte.Models.SensorReading" />
            </summary>
        </member>
        <member name="P:Citrusbyte.Models.SensorReading.ReadingTime">
            <summary>
                The time of this <see cref="T:Citrusbyte.Models.SensorReading" />
            </summary>
        </member>
        <member name="P:Citrusbyte.Models.SensorReading.Status">
            <summary>
                The status of this <see cref="T:Citrusbyte.Models.SensorReading" />
            </summary>
        </member>
        <member name="P:Citrusbyte.Models.SensorReading.Temp">
            <summary>
                The temperature in degrees Celcius of this <see cref="T:Citrusbyte.Models.SensorReading" />
            </summary>
        </member>
        <member name="T:Citrusbyte.Models.ToDoItem">
            <summary>
                Class for To Do Items
            </summary>
        </member>
        <member name="M:Citrusbyte.Models.ToDoItem.#ctor(System.Int32,System.String,System.Boolean,Citrusbyte.Models.ApplicationUser)">
            <summary>
                Parameterized constructor
            </summary>
            <param name="id"></param>
            <param name="description"></param>
            <param name="isDone"></param>
            <param name="user"></param>
        </member>
        <member name="M:Citrusbyte.Models.ToDoItem.#ctor">
            <summary>
                Default constructor
            </summary>
        </member>
        <member name="P:Citrusbyte.Models.ToDoItem.Description">
            <summary>
                The description for this <see cref="T:Citrusbyte.Models.ToDoItem" />
            </summary>
        </member>
        <member name="P:Citrusbyte.Models.ToDoItem.Id">
            <summary>
                The Id for this <see cref="T:Citrusbyte.Models.ToDoItem" />
            </summary>
        </member>
        <member name="P:Citrusbyte.Models.ToDoItem.IsDone">
            <summary>
                Whethe or not this <see cref="T:Citrusbyte.Models.ToDoItem" /> is complete
            </summary>
        </member>
        <member name="P:Citrusbyte.Models.ToDoItem.User">
            <summary>
                The author of this <see cref="T:Citrusbyte.Models.ToDoItem" />
            </summary>
        </member>
    </members>
</doc>
